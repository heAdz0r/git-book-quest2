#!/usr/bin/env bun

// –ü—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
const server = Bun.serve({
  port: 3000,
  fetch(req) {
    const url = new URL(req.url);

    // –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    if (url.pathname === "/" || url.pathname === "/index.html") {
      return new Response(Bun.file("public/index.html"));
    }

    // –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ CSS
    if (url.pathname.endsWith(".css")) {
      const filePath = url.pathname.startsWith("/src/")
        ? url.pathname.slice(1)
        : `src/styles/${url.pathname.split("/").pop()}`;
      const file = Bun.file(filePath);
      return new Response(file, {
        headers: { "Content-Type": "text/css" },
      });
    }

    // –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ JS –∏ JSX —Ñ–∞–π–ª–æ–≤
    if (url.pathname.endsWith(".js") || url.pathname.endsWith(".jsx")) {
      const filePath = url.pathname.startsWith("/src/")
        ? url.pathname.slice(1)
        : `src/${url.pathname.slice(1)}`;
      const file = Bun.file(filePath);
      return new Response(file, {
        headers: { "Content-Type": "application/javascript" },
      });
    }

    return new Response("Not Found", { status: 404 });
  },
});

console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${server.port}`);
console.log(
  "üìù –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É –≤—ã—à–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π"
);
